import { logAffiliateClickV2 } from './affiliate/callable/logAffiliateClick';
import { logAffiliateClickHttpV2 } from './affiliate/http/logAffiliateClickHttp';
import { processAffiliateConversionV2 } from './affiliate/triggers/processAffiliateConversion';
import { sendCustomerWelcomeEmail, sendAffiliateWelcomeEmail, sendB2BOrderConfirmationAdmin, sendB2BOrderConfirmationCustomer, sendOrderStatusEmail, sendB2COrderNotificationAdmin, sendB2COrderPendingEmail, sendOrderConfirmationEmails, sendUserActivationEmail, sendOrderStatusUpdateEmail, updateCustomerEmail, testEmail, approveAffiliate, sendStatusUpdateHttp, sendVerificationEmail, sendAffiliateCredentialsV2, sendPasswordResetEmailV2, confirmPasswordResetV2 } from './email/functions';
import { processB2COrderCompletionHttp, processB2COrderCompletion, manualStatusUpdate } from './order-processing/functions';
import { getGeoData, testGeoHeaders } from './geo/functions';
import { deleteCustomerAccount, deleteB2CCustomerAccount, toggleCustomerActiveStatus, createAdminUser, checkNamedDatabase, debugDatabase } from './customer-admin/functions';
import { createPaymentIntentV2 } from './payment/createPaymentIntent';
import { createPaymentIntentMinimalV2 } from './payment/createPaymentIntentMinimal';
import { scrapeWebsiteMeta } from './website-scraper/functions';
export { logAffiliateClickV2, logAffiliateClickHttpV2, processAffiliateConversionV2 };
export { sendCustomerWelcomeEmail as sendCustomerWelcomeEmailV2, sendAffiliateWelcomeEmail as sendAffiliateWelcomeEmailV2, sendB2BOrderConfirmationAdmin as sendB2BOrderConfirmationAdminV2, sendB2BOrderConfirmationCustomer as sendB2BOrderConfirmationCustomerV2, sendOrderStatusEmail as sendOrderStatusEmailV2, sendB2COrderNotificationAdmin as sendB2COrderNotificationAdminV2, sendB2COrderPendingEmail as sendB2COrderPendingEmailV2, sendOrderConfirmationEmails as sendOrderConfirmationEmailsV2, sendUserActivationEmail as sendUserActivationEmailV2, sendOrderStatusUpdateEmail as sendOrderStatusUpdateEmailV2, updateCustomerEmail as updateCustomerEmailV2, testEmail as testEmailV2, approveAffiliate as approveAffiliateV2, sendStatusUpdateHttp as sendStatusUpdateHttpV2, sendVerificationEmail as sendVerificationEmailV2, sendAffiliateCredentialsV2, sendPasswordResetEmailV2, confirmPasswordResetV2 };
export { processB2COrderCompletionHttp as processB2COrderCompletionHttpV2, processB2COrderCompletion as processB2COrderCompletionV2, manualStatusUpdate as manualStatusUpdateV2 };
export { getGeoData as getGeoDataV2, testGeoHeaders as testGeoHeadersV2 };
export { deleteCustomerAccount as deleteCustomerAccountV2, deleteB2CCustomerAccount as deleteB2CCustomerAccountV2, toggleCustomerActiveStatus as toggleCustomerActiveStatusV2, createAdminUser as createAdminUserV2, checkNamedDatabase as checkNamedDatabaseV2, debugDatabase as debugDatabaseV2 };
export { createPaymentIntentV2, createPaymentIntentMinimalV2 };
export { scrapeWebsiteMeta as scrapeWebsiteMetaV2 };
export declare const exampleProtectedFunction: import("firebase-functions/v2/https").HttpsFunction;
export { testPasswordResetMinimal } from './email/testPasswordReset';
export { sendPasswordResetV3, confirmPasswordResetV3 } from './email-v2/functions';
export { sendCustomerWelcomeEmailV3, sendAffiliateWelcomeEmailV3, sendB2COrderPendingEmailV3, sendB2COrderNotificationAdminV3, sendB2BOrderConfirmationCustomerV3, sendOrderStatusEmailV3, sendB2BOrderConfirmationAdminV3, sendVerificationEmailV3, sendAffiliateCredentialsV3, approveAffiliateV3 } from './email-v2/functions-main';
export { sendOrderConfirmationEmailsV3 } from './email-v2/triggers';
