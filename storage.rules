rules_version = '2';

// Craft rules based on data in your Firestore database
// allow write: if firestore.get(
//    /databases/(default)/documents/users/$(request.auth.uid)).data.isAdmin;
service firebase.storage {
  match /b/{bucket}/o {
    // Default deny all access (temporarily allow for debugging)
    match /{allPaths=**} {
      allow read, write: if request.auth != null;
    }
    
    // User profile images
    match /users/{userId}/profile.jpg {
      allow read: if true; // Anyone can view profile images
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Order attachments
    match /orders/{orderId}/{fileName} {
      allow read: if request.auth != null && (
        // Admin can read all
        get(/databases/b8s-reseller-db/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        // User can read their own orders
        resource.metadata.userId == request.auth.uid
      );
      
      allow write: if request.auth != null && (
        // Admin can write all
        get(/databases/b8s-reseller-db/documents/users/$(request.auth.uid)).data.role == 'admin' ||
        // User can upload to their own orders
        request.resource.metadata.userId == request.auth.uid
      );
    }
    
    // Product images
    match /products/{productId}/{fileName} {
      allow read: if true; // Anyone can view product images
      allow write: if request.auth != null && 
                   get(/databases/b8s-reseller-db/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Generic marketing materials (admin only upload)
    match /marketing-materials/generic/{fileName} {
      allow read: if request.auth != null; // Authenticated users can view
      allow write: if request.auth != null; // Temporarily allow all authenticated users
    }
    
    // Customer-specific marketing materials (admin only upload)
    match /marketing-materials/customers/{customerId}/{fileName} {
      allow read: if request.auth != null && (
        // Admin can read all (hardcoded admin IDs due to named database access issues)
        isAdmin() ||
        // Customer can read their own materials
        request.auth.uid == customerId
      );
      allow write: if request.auth != null && isAdmin();
    }
    
    // Helper function for admin check (hardcoded due to named database access issues)
    function isAdmin() {
      return request.auth.uid in [
        '9AudFilG8VeYHcFnKgUtQkByAmn1',  // Primary admin
        '9yKlFQEhb4dbSwa206BxXVZWdgs2',  // Admin 2  
        'hCu3TDpe5XZ0adTp5eGLpGxDvL13'   // Admin 3
      ];
    }
  }
}
